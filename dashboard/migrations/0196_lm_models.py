# Generated by Django 2.2.19 on 2021-06-10 12:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("dashboard", "0195_reported_funcuse_cleanup"),
    ]

    operations = [
        migrations.CreateModel(
            name="ExtractedLMRec",
            fields=[
                (
                    "rawchem_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="dashboard.RawChem",
                    ),
                ),
                (
                    "study_location",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("sampling_date", models.DateField(blank=True, null=True)),
                (
                    "population_description",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "population_gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Male"),
                            ("F", "Female"),
                            ("A", "All"),
                            ("O", "Other"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "population_age",
                    models.CharField(
                        blank=True,
                        help_text="Age can be reported as age ranges, or descriptive groups (adults, children, etc.)",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "population_other",
                    models.CharField(
                        blank=True,
                        help_text="Used for occupational or other population stratifiers we want to retain at the chemical level.",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "sampling_method",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "analytical_method",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("medium", models.CharField(blank=True, max_length=200, null=True)),
                ("num_measure", models.IntegerField(blank=True, null=True)),
                ("num_nondetect", models.IntegerField(blank=True, null=True)),
                ("detect_freq", models.FloatField(blank=True, null=True)),
                (
                    "detect_freq_type",
                    models.CharField(
                        blank=True,
                        null=True,
                        choices=[("R", "Reported"), ("C", "Computed")],
                        max_length=1,
                    ),
                ),
                ("LOD", models.FloatField(blank=True, null=True, verbose_name="LOD")),
                ("LOQ", models.FloatField(blank=True, null=True, verbose_name="LOQ")),
            ],
            options={"abstract": False},
            bases=("dashboard.rawchem",),
        ),
        migrations.AddField(
            model_name="extractedlmdoc",
            name="extraction_wa",
            field=models.TextField(
                blank=True,
                help_text="Contain details of the contract and work assignment under which data was extracted",
                verbose_name="Extraction WA",
            ),
        ),
        migrations.AddField(
            model_name="extractedlmdoc",
            name="qa_flag",
            field=models.CharField(
                blank=True,
                help_text="Indicates whether ICF completed QA",
                max_length=30,
                verbose_name="QA flag",
            ),
        ),
        migrations.AddField(
            model_name="extractedlmdoc",
            name="qa_who",
            field=models.CharField(
                blank=True,
                help_text="Name of contractor who completed QA",
                max_length=50,
                verbose_name="QA who",
            ),
        ),
        migrations.CreateModel(
            name="StatisticalValue",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Creation timestamp, inherited from CommonInfo.",
                        null=True,
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Modification timestamp, inherited from CommonInfo.",
                        null=True,
                    ),
                ),
                ("name", models.CharField(max_length=30)),
                ("value", models.FloatField()),
                (
                    "value_type",
                    models.CharField(
                        choices=[("R", "Reported"), ("C", "Computed")], max_length=1
                    ),
                ),
                ("stat_unit", models.CharField(max_length=30)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the record, inherited from CommonInfo.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "record",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="statistics",
                        to="dashboard.ExtractedLMRec",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who modified the record, inherited from CommonInfo",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="HarmonizedMedium",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Creation timestamp, inherited from CommonInfo.",
                        null=True,
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Modification timestamp, inherited from CommonInfo.",
                        null=True,
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created the record, inherited from CommonInfo.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who modified the record, inherited from CommonInfo",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"abstract": False},
        ),
        migrations.AddField(
            model_name="extractedlmrec",
            name="harmonized_medium",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="record",
                to="dashboard.HarmonizedMedium",
            ),
        ),
        migrations.RunSQL(
            sql="""
            insert into dashboard_extractedlmrec(rawchem_ptr_id)
            select rc.id 
            from dashboard_rawchem rc
            join dashboard_extractedtext et on rc.extracted_text_id = et.data_document_id
            join dashboard_datadocument dd on et.data_document_id = dd.id
            join dashboard_datagroup dg on dd.data_group_id = dg.id
            join dashboard_grouptype gt on dg.group_type_id = gt.id
            where gt.code = 'LM';
            """,
            reverse_sql=migrations.RunSQL.noop,
        ),
        migrations.RunSQL(
            sql="""
                insert into dashboard_harmonizedmedium(name) values
                ('indoor dust'),
                ('soil'), 
                ('ambient air'),
                ('human blood (whole/serum/plasma)'),
                ('sediment'),
                ('surface water'),
                ('personal air'),
                ('wildlife (birds)'),
                ('wildlife (fish)'),
                ('wastewater (influent, effluent)'),
                ('groundwater'),
                ('wildlife (terrestrial invertebrates/worms)'),
                ('wildlife (aquatic vertebrates/mammals)'),
                ('vegetation'),
                ('wildlife (terrestrial vertebrates)'),
                ('unknown'),
                ('breast milk'),
                ('drinking water'),
                ('food product'),
                ('human (other tissues or fluids)'),
                ('indoor air'),
                ('livestock/meat'),
                ('product'),
                ('raw agricultural commodity'),
                ('skin wipes'),
                ('urine'),
                ('wildlife (aquatic invertebrate)'),
                ('sludge'),
                ('other-ecological'),
                ('precipitation'),
                ('other-environmental'),
                ('landfill leachate')
                """,
            reverse_sql=migrations.RunSQL.noop,
        ),
    ]
